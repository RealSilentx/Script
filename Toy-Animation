local player = game.Players.LocalPlayer

local function applyAnimations(character)
    -- Wait for necessary components to fully load
    local humanoid = character:WaitForChild("Humanoid")
    local animate = character:WaitForChild("Animate")

    if animate then
        -- Set the custom animation IDs
        animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=782841498"
        animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=782845736"
        animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=782843345"
        animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=782842708"
        animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=782847020"
        animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=782843869"
        animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=782846423"

        -- Optional: Trigger an initial jump to apply animations smoothly
        humanoid.Jump = true
    else
        warn("Animate script not found in character")
    end
end

-- Apply animations to the initial character if it exists
if player.Character then
    applyAnimations(player.Character)
end

-- Apply animations each time the player respawns and the character is fully loaded
player.CharacterAdded:Connect(function(character)
    -- Wait for HumanoidRootPart to ensure the character is ready
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    -- You may also want to wait for the humanoid to ensure it is ready
    local humanoid = character:WaitForChild("Humanoid")

    -- After everything is loaded, apply animations
    applyAnimations(character)
end)
